
const menu = document.createElement('div');
menu.id = 'menu';
menu.style.width = '300px';
menu.style.backgroundColor = 'black';
menu.style.position = 'absolute';
menu.style.top = '50px';
menu.style.left = '50px';
menu.style.borderRadius = '10px';
menu.style.boxShadow = 'rgba(0, 0, 0, 0.5) 0px 0px 10px';
menu.style.paddingBottom = '20px';
document.body.appendChild(menu);

const menuHeader = document.createElement('div');
menuHeader.innerText = 'Pixelit Tools';
menuHeader.style.padding = '10px';
menuHeader.style.fontSize = '18px';
menuHeader.style.textAlign = 'center';
menuHeader.style.cursor = 'move';
menuHeader.style.userSelect = 'none';
menuHeader.style.background = 'linear-gradient(90deg, red, orange, yellow, green, blue, indigo, violet)';
menuHeader.style.backgroundSize = '400% 400%';
menuHeader.style.color = 'transparent';
menuHeader.style.animation = 'rainbow 5s ease infinite';
menuHeader.style.webkitBackgroundClip = 'text';
menuHeader.style.webkitTextFillColor = 'transparent';
menuHeader.style.position = 'relative'; // Needed for dragging
menu.appendChild(menuHeader);

const changeBgButton = document.createElement('button');
changeBgButton.innerText = 'Change Background Color';
changeBgButton.style.width = '80%';
changeBgButton.style.margin = '20px 10%';
changeBgButton.style.padding = '10px';
changeBgButton.style.backgroundColor = '#666';
changeBgButton.style.border = 'none';
changeBgButton.style.color = 'white';
changeBgButton.style.fontSize = '16px';
changeBgButton.style.cursor = 'pointer';
changeBgButton.style.borderRadius = '5px';
menu.appendChild(changeBgButton);

changeBgButton.onclick = function() {
    const color = prompt('Enter a color (name or hex code):', '#ffffff');
    if (color) {
        document.body.style.backgroundColor = color;
    }
};

const ownerSpoofButton = document.createElement('button');
ownerSpoofButton.innerText = 'Spoof Roles to Owner';
ownerSpoofButton.style.width = '80%';
ownerSpoofButton.style.margin = '10px 10%';
ownerSpoofButton.style.padding = '10px';
ownerSpoofButton.style.backgroundColor = '#666';
ownerSpoofButton.style.border = 'none';
ownerSpoofButton.style.color = 'white';
ownerSpoofButton.style.fontSize = '16px';
ownerSpoofButton.style.cursor = 'pointer';
ownerSpoofButton.style.borderRadius = '5px';
menu.appendChild(ownerSpoofButton);

ownerSpoofButton.onclick = function() {
    const roleElements = document.querySelectorAll('[role], .role, span.role'); // Generalize search for role elements
    roleElements.forEach(element => {
        const text = element.innerText;
        if (['Admin', 'Helper', 'Moderator', 'Player'].includes(text)) {
            element.innerText = 'Owner';
            element.style.background = 'linear-gradient(90deg, red, orange, yellow, green, blue, indigo, violet)';
            element.style.backgroundSize = '400% 400%';
            element.style.color = 'transparent';
            element.style.animation = 'rainbowText 5s ease infinite';
            element.style.webkitBackgroundClip = 'text';
            element.style.webkitTextFillColor = 'transparent';
        }
    });
};

const tokenSpoofButton = document.createElement('button');
tokenSpoofButton.innerText = 'Spoof Tokens';
tokenSpoofButton.style.width = '80%';
tokenSpoofButton.style.margin = '10px 10%';
tokenSpoofButton.style.padding = '10px';
tokenSpoofButton.style.backgroundColor = '#666';
tokenSpoofButton.style.border = 'none';
tokenSpoofButton.style.color = 'white';
tokenSpoofButton.style.fontSize = '16px';
tokenSpoofButton.style.cursor = 'pointer';
tokenSpoofButton.style.borderRadius = '5px';
menu.appendChild(tokenSpoofButton);

tokenSpoofButton.onclick = function() {
    const tokensElement = document.getElementById('tokens');
    if (tokensElement) {
        const tokenAmount = prompt('Enter the amount of tokens you want:');
        tokensElement.textContent = tokenAmount || '0';
        alert('Tokens spoofed successfully!');
    } else {
        alert('Token element not found!');
    }
};

const freePackSpoofButton = document.createElement('button');
freePackSpoofButton.innerText = 'Spoof Pack Prices to Free';
freePackSpoofButton.style.width = '80%';
freePackSpoofButton.style.margin = '10px 10%';
freePackSpoofButton.style.padding = '10px';
freePackSpoofButton.style.backgroundColor = '#666';
freePackSpoofButton.style.border = 'none';
freePackSpoofButton.style.color = 'white';
freePackSpoofButton.style.fontSize = '16px';
freePackSpoofButton.style.cursor = 'pointer';
freePackSpoofButton.style.borderRadius = '5px';
menu.appendChild(freePackSpoofButton);

freePackSpoofButton.onclick = function() {
    const costElements = document.querySelectorAll('.pack-cost, span, div');
    costElements.forEach(element => {
        if (element.innerText.includes('Cost:')) {
            element.innerText = element.innerText.replace(/\d+/, 'Free');
        }
    });
    alert('All packs are now spoofed to "Free"!');
};

const addFeature = document.createElement('button');
addFeature.innerText = '+ Add Feature';
addFeature.style.width = '80%';
addFeature.style.margin = '10px 10%';
addFeature.style.padding = '10px';
addFeature.style.backgroundColor = '#444';
addFeature.style.border = 'none';
addFeature.style.color = 'white';
addFeature.style.fontSize = '16px';
addFeature.style.cursor = 'pointer';
addFeature.style.borderRadius = '5px';
menu.appendChild(addFeature);

addFeature.onclick = function() {
    const featureName = prompt('Enter the feature name:');
    const featureCode = prompt('Paste the feature code:');
    
    if (featureName && featureCode) {
        const newFeatureButton = document.createElement('button');
        newFeatureButton.innerText = featureName;
        newFeatureButton.style.width = '80%';
        newFeatureButton.style.margin = '10px 10%';
        newFeatureButton.style.padding = '10px';
        newFeatureButton.style.backgroundColor = '#555';
        newFeatureButton.style.border = 'none';
        newFeatureButton.style.color = 'white';
        newFeatureButton.style.fontSize = '16px';
        newFeatureButton.style.cursor = 'pointer';
        newFeatureButton.style.borderRadius = '5px';
        newFeatureButton.onclick = function() {
            eval(featureCode);  
        };
        menu.appendChild(newFeatureButton);
    }
};

const style = document.createElement('style');
style.innerHTML = `
    @keyframes rainbow {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }

    @keyframes rainbowText {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }
`;
document.head.appendChild(style);

function makeDraggable(element) {
    let offsetX, offsetY;

    element.onmousedown = function(e) {
        offsetX = e.clientX - parseInt(window.getComputedStyle(element).left);
        offsetY = e.clientY - parseInt(window.getComputedStyle(element).top);

        document.onmousemove = function(e) {
            element.style.left = e.clientX - offsetX + 'px';
            element.style.top = e.clientY - offsetY + 'px';
        };

        document.onmouseup = function() {
            document.onmousemove = null;
            document.onmouseup = null;
        };
    };
}

makeDraggable(menu);
